# Generated by Django 3.1 on 2020-12-29 23:04

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import rest_api.models
import rest_api.storage
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
                ('total_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=13)),
                ('description', models.CharField(blank=True, max_length=2000)),
                ('ShippingFee', models.DecimalField(decimal_places=2, default=0.0, max_digits=13)),
                ('Date_Posted', models.DateField(default=datetime.date.today)),
                ('ShippingTime', models.IntegerField(choices=[(1, '1 day'), (3, '3 days'), (5, '5 days'), (10, '10 days')], default=10)),
                ('Is_sold', models.BooleanField(default=False)),
                ('times_viewed', models.IntegerField(default=0)),
                ('buyer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Articles_bought', to=settings.AUTH_USER_MODEL)),
                ('saved', models.ManyToManyField(blank=True, related_name='Articles_saved', to=settings.AUTH_USER_MODEL)),
                ('seller', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Articles_posted', to=settings.AUTH_USER_MODEL)),
                ('shop_cart', models.ManyToManyField(blank=True, related_name='Articles_on_cart', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id2', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=13)),
                ('name', models.CharField(max_length=70)),
                ('image', models.ImageField(null=True, storage=rest_api.storage.OverwriteStorage(), upload_to=rest_api.models.user_item_path)),
                ('condition', models.CharField(choices=[('B', 'Brand New'), ('L', 'Like New'), ('V', 'Very Good'), ('G', 'Good'), ('A', 'Acceptable')], default='B', max_length=1)),
                ('pertaining_article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items_in_article', to='rest_api.article')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('is_popular', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Console',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rest_api.item')),
                ('release_year', models.DecimalField(decimal_places=0, max_digits=5)),
                ('brand', models.CharField(max_length=70)),
                ('storage_capacity', models.CharField(max_length=20)),
                ('color', models.CharField(max_length=70)),
            ],
            bases=('rest_api.item',),
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('item_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='rest_api.item')),
                ('release_year', models.DecimalField(decimal_places=0, max_digits=5)),
                ('publisher', models.CharField(max_length=70)),
                ('genre', models.CharField(max_length=70)),
                ('rating', models.CharField(choices=[('E', 'Everyone'), ('T', 'Teen'), ('M', 'Mature'), ('A', 'Adult')], default='E', max_length=1)),
                ('platform', models.CharField(blank=True, choices=[('PS', 'Playstation'), ('XB', 'Xbox One'), ('SW', 'Nintendo'), ('PC', 'Computer'), ('WI', 'Wii'), ('RT', 'Retro')], max_length=2)),
            ],
            bases=('rest_api.item',),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('biography', models.CharField(blank=True, max_length=2000)),
                ('avatar', models.ImageField(default='default_1', storage=rest_api.storage.OverwriteStorage(), upload_to=rest_api.models.user_profile_path)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('description', models.CharField(blank=True, max_length=2000)),
                ('date_posted', models.DateField(default=datetime.date.today)),
                ('reviewed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviewed', to=settings.AUTH_USER_MODEL)),
                ('reviewer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewer', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='tag',
            field=models.ManyToManyField(blank=True, to='rest_api.Tag'),
        ),
    ]
